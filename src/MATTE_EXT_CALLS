

static matteValue_t vm_ext_call__gate(matteVM_t * vm, matteValue_t a, matteValue_t b, matteValue_t c) {
    int condition = matte_value_as_boolean(a); // uh?? we need to stop if theres an error

    if (condition) {
        matteValue_t out = matte_heap_new_value(vm->heap);
        matte_value_into_copy(&out, b);
        return out;
    } else {
        matteValue_t out = matte_heap_new_value(vm->heap);
        matte_value_into_copy(&out, c);
        return out;
    }
}


static matteValue_t vm_ext_call__while(matteVM_t * vm, matteValue_t a, matteValue_t b) {
    if (!matte_value_is_callable(b)) {
        matte_vm_raise_error_string(vm, MATTE_STR_CAST("While requires second argument to be a function."));
        return matte_heap_new_value(vm->heap);
    }
    while(matte_value_as_boolean(a)) {
        matteValue_t result = matte_vm_call(vm, b, matte_array_empty());
        matte_heap_recycle(result);
    }
    return matte_heap_new_value(vm->heap);
}



