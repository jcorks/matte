fileid 1

; @sum = 1
; foreach([10, 100, 1000], <= (key, val) {
;   sum += val;
; }
; return sum;
function 0
    args=0
    locals=1
        "sum"
    captures=0
    
    1 nnm 1.0
    1 arf 1
    1 nfn 1 1000
    
    1 nnm 1000.0
    1 nnm 100.0
    1 nnm 10.0
    1 nar 3
    
    1 ext foreach

    1 prf 1
end function


; add to sum
function 1000
    args=2
        "key"
        "val"
    locals=0
    ; sum   
    captures=1
        0   1


    1 prf 2
    1 prf 3
    1 opr +
    1 arf 3
end function








        

; (a, b) {when(a < b): "smaller"; return "not smaller"}
function 11
    args=2
        "a"
        "b"
    locals=0
    captures=0
    
    1 prf 2
    1 opr TN
    1 prf 1
    1 opr TN 
    1 opr <
    1 skp 7
        1 nst "smaller"
        1 ret
    nst "not smaller"

    
end function



; return if(a.toNumber() < b.toNumber(), {then:a, else:b})
function 10
    args=2
        "a"
        "b"
    locals=0
    captures=0
    
    1 prf 2
    1 prf 1

    1 prf 2
    1 opr TN
    1 prf 1
    1 opr TN 
    1 opr <

    1 ext gate
end function


; (a + n) + n
function 8
    args=2
        "a"
        "n"
    locals=0
    captures=0
        
    1 nfn 1 5
    1 cal 0
    1 prf 2
    1 prf 1
    1 opr TN
    1 opr +
    1 opr +
end function



function 5
    args=0
    locals=0
    captures=0
    
    1 nnm 0.0
end function

function 2
    args=3
        "a"
        "b"
        "c"

    locals=1
        "testfn"
    captures=0

    ; (arg){return arg*arg}
    function 1 
        args=2
            "arg0"
            "arg1"
        locals=0
        captures=0

        2 prf 1
        2 prf 2
        2 opr +
    end function

    ; @testfn <= fn 1
    3 nfn 1 1
    3 arf 4
    3 pop 1


    ; testfn(a, b)
    1 prf 1
    1 prf 2    
    1 prf 4
    1 cal 2
    
    ; c + testfn(a, b)
    1 prf 3
    1 opr +
    
    ; return 
end function 
